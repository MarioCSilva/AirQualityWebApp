{"ast":null,"code":"var _jsxFileName = \"/Users/mario/Desktop/AirQualityWebApp/frontend/src/views/admin/Maps.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport componentStyles from \"assets/theme/views/admin/maps.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(componentStyles);\n\nconst MapWrapper = () => {\n  _s();\n\n  const mapRef = React.useRef(null);\n  const theme = useTheme();\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [{\n        featureType: \"administrative\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#444444\"\n        }]\n      }, {\n        featureType: \"landscape\",\n        elementType: \"all\",\n        stylers: [{\n          color: \"#f2f2f2\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"all\",\n        stylers: [{\n          saturation: -100\n        }, {\n          lightness: 45\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"simplified\"\n        }]\n      }, {\n        featureType: \"road.arterial\",\n        elementType: \"labels.icon\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"all\",\n        stylers: [{\n          color: theme.palette.primary.main\n        }, {\n          visibility: \"on\"\n        }]\n      }]\n    };\n    map = new google.maps.Map(map, mapOptions);\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Light Bootstrap Dashboard PRO React!\"\n    });\n    const contentString = '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' + \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString\n    });\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      height: \"600px\",\n      position: \"relative\",\n      width: \"100%\",\n      overflow: \"hidden\",\n      borderRadius: \".375rem\",\n      ref: mapRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapWrapper, \"MhbcsgkHDqJGFxMV4/0rYh4BvaI=\", false, function () {\n  return [useTheme];\n});\n\n_c = MapWrapper;\n\nconst Maps = () => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      component: Box,\n      marginTop: \"-6rem\",\n      classes: {\n        root: classes.containerRoot\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            classes: {\n              root: classes.cardRoot\n            },\n            children: /*#__PURE__*/_jsxDEV(MapWrapper, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Maps, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Maps;\nexport default Maps;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapWrapper\");\n$RefreshReg$(_c2, \"Maps\");","map":{"version":3,"sources":["/Users/mario/Desktop/AirQualityWebApp/frontend/src/views/admin/Maps.js"],"names":["React","makeStyles","useTheme","Box","Card","Container","Grid","Header","componentStyles","useStyles","MapWrapper","mapRef","useRef","theme","useEffect","google","window","map","current","lat","lng","myLatlng","maps","LatLng","mapOptions","zoom","center","scrollwheel","zoomControl","styles","featureType","elementType","stylers","color","visibility","saturation","lightness","palette","primary","main","Map","marker","Marker","position","animation","Animation","DROP","title","contentString","infowindow","InfoWindow","content","event","addListener","open","Maps","classes","root","containerRoot","cardRoot"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nimport componentStyles from \"assets/theme/views/admin/maps.js\";\n\nconst useStyles = makeStyles(componentStyles);\n\nconst MapWrapper = () => {\n  const mapRef = React.useRef(null);\n  const theme = useTheme();\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [\n        {\n          featureType: \"administrative\",\n          elementType: \"labels.text.fill\",\n          stylers: [{ color: \"#444444\" }],\n        },\n        {\n          featureType: \"landscape\",\n          elementType: \"all\",\n          stylers: [{ color: \"#f2f2f2\" }],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"all\",\n          stylers: [{ saturation: -100 }, { lightness: 45 }],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"simplified\" }],\n        },\n        {\n          featureType: \"road.arterial\",\n          elementType: \"labels.icon\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"all\",\n          stylers: [\n            { color: theme.palette.primary.main },\n            { visibility: \"on\" },\n          ],\n        },\n      ],\n    };\n\n    map = new google.maps.Map(map, mapOptions);\n\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Light Bootstrap Dashboard PRO React!\",\n    });\n\n    const contentString =\n      '<div class=\"info-window-content\"><h2>Light Bootstrap Dashboard PRO React</h2>' +\n      \"<p>A premium Admin for React-Bootstrap, Bootstrap, React, and React Hooks.</p></div>\";\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  });\n  return (\n    <>\n      <Box\n        height=\"600px\"\n        position=\"relative\"\n        width=\"100%\"\n        overflow=\"hidden\"\n        borderRadius=\".375rem\"\n        ref={mapRef}\n      ></Box>\n    </>\n  );\n};\n\nconst Maps = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container\n        maxWidth={false}\n        component={Box}\n        marginTop=\"-6rem\"\n        classes={{ root: classes.containerRoot }}\n      >\n        <Grid container>\n          <Grid item xs={12}>\n            <Card classes={{ root: classes.cardRoot }}>\n              <MapWrapper />\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}